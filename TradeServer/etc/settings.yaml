
app_name: 'testModule'
project_name: 'testProject'
project_version: '0.1'

logging:
  level: DEBUG
  format: '%(levelname)s %(asctime)s  %(message)s'
  message_format: '%(project_name)s:%(project_version)s %(app_id)s %(_filename)s:%(_lineno)d [%(tags)s] '

  filters:
    trans:
      tag: 'TRANS:'   # tag 过滤
  handlers:
    - type: file
      enable: true
      filename: 'server.log'
      encoding: 'UTF-8'
      max_bytes: 67108864 # 64MB
      backup_count: 10

    - type: file
      enable: true
      filename: 'trans.log'   #运单日志跟踪
      encoding: 'UTF-8'
      max_bytes: 67108864 # 64MB
      backup_count: 10
      filter: 'trans'

    - type: console
      enable: false

http_trace: #自动日志记录
  level: DEBUG
  request:
    options:
      header:  false
      body:  true
      max_size: 500 # 最大数据包长度
    urls:
      - match: '/'
      - match: 'zoo/cat'
        body:  true

  response:
    options:
      header:  false
      body:  true
      max_size: 500 # 最大数据包长度
    urls:
      - match: '/'
      - match: 'zoo/cat'
        body:  true



datasources:
  - name: 'mongodb'
    class: 'mantis.fundamental.nosql.mongo.Datasource'
    host:
    port:
    dbname:
    user:
    password:
    enable: true

  - name: 'zk_1'
    type: 'zookeeper'
    enable: false
    hosts: 'localhost:2181'
    root: '/camel'

  - name: 'redis'
    class: 'mantis.fundamental.redis.rediscache.Datasource'
    host: '127.0.0.1'
    port: 5603
    password: '1111'
    db: 0
    enable: true

message_brokers:
  - name: 'kafka_1'
    class: 'mantis.fundamental.kafka.MessageBroker'
    enable: false
    hosts: 'localhost:9092'
    zookeepers: 'localhost:2181'
    channels:
      - name: 'test'
        group: 'abcdef'  # simple_consumer if group is null
        handler:  'access.kafka.test.get_message' # last unit< get_message> is function object
        enable: true
        type: 'queue'

  - name: 'redis'
    class: 'mantis.fundamental.redis.rediscache.MessageBroker'
    host: '127.0.0.1'
    port: 5603
    password: '1111'
    db: 0
    enable: true
    channels:
      - name: 'ctp_contract_tick_queue'
#        handler: 'get_message'
        enable: true
        type: 'queue' # or queue

services:
  - name: 'http-subscribe'
    class: 'mantis.fundamental.flask.service.FlaskService'
    enable: true
    block: false
    cfgs:
      SQLALCHEMY_DATABASE_URI : 'sqlite:////tmp/test.db'
      SQLALCHEMY_BINDS:
      SQLALCHEMY_TRACK_MODIFICATIONS : true
      SQLALCHEMY_COMMIT_ON_TEARDOWN : true
      SECRET_KEY : "abc"
    http:
      host : '127.0.0.1'
      port : 18901
      threaded: false
      debug: true

    blueprints:
      - package: 'http'
        url: '/v1'
        name: 'v1'
        register: true
        modules:
          - name: 'contract'
            url: '/contract'
            routes:
              - url: '/list'                    # url name
                name: 'list_contracts'   # function name
                methods: 'GET'
              - url: '/subscribe'
                name: 'subscribe'
                methods: 'POST'
              - url: '/unsubscribe'
                name: 'unsubscribe'
                methods: 'POST'


  - name:       'main'
    enable:     true
    class:      'service.ctp_market.MarketService'
    gateway:
      name: 'CTP'
      brokerID:   "9999"
      mdAddress:  "tcp://180.168.146.187:10011"
      tdAddress:  "tcp://180.168.146.187:10001"
      userID:     "113967"
      password:  "loginmm6688"
      comments:  "交易服务器地址可以不设置,仅仅使用行情接收功能"


    ctp_contract_tick_queue: 'ctp_contract_tick_queue'
    ctp_contract_tick_pubsub_prefix: 'ctp_contract_tick_'

    ctp_tick_filters:
      - 'filters.CtpTickValidator'




#    message_handlers:
#      - name: 'market_recieved'
#        broker: 'redis1/ctp_market'
#        handler: 'onMarketRecved'
#        enable: true
#
#    dsstream:
#        drains:
#          - name: 'redis1'
#            ds: 'redis1/ctp_market'
#            handler: 'datahandlers.cpt_market_handler'
#            enable: true
#            params:
#              flexible: true
#        spouts:
#          - name: 'redis-market'
#            ds: 'redis1/ctp_market_all'
#            enable: true
#
#  - name: 'django'
#    type: 'django'
#    django_settings: 'project.settings'
#    http:
#      host : '127.0.0.1'
#      port : 5555
#      threaded: false
#      debug: true
#
#
#
#
#cas_config:
#  cas_server: 'https://localhost:80'
#  success_login: '/success_login'



# qpid-receive -b localhost:5672 -a "mq_test;{create:always,node:{type:queue,durable:true}}"






